<?php

/* +***********************************************************************************
 * The contents of this file are subject to the vtiger CRM Public License Version 1.0
 * ("License"); You may not use this file except in compliance with the License
 * The Original Code is:  vtiger CRM Open Source
 * The Initial Developer of the Original Code is vtiger.
 * Portions created by vtiger are Copyright (C) vtiger.
 * All Rights Reserved.
 * *********************************************************************************** */

class Candidates_Edit_View extends Vtiger_Edit_View {

	public function process(Vtiger_Request $request) {
        $viewer = $this->getViewer($request);
        $moduleName = $request->getModule();
        $recordId = $request->get('record');
        $recordModel = $this->record;
        $userStatus = '';
        $currentAction = '';
        if(!$recordModel){
            if (!empty($recordId)) {
                $recordModel = Vtiger_Record_Model::getInstanceById($recordId, $moduleName);
            } else {
                $recordModel = Vtiger_Record_Model::getCleanInstance($moduleName);
            }
            $this->record = $recordModel;
        }
        if (!empty($recordId)){
            $flag = $this->getFlagActionByRecord($recordId);
            $currentStt = $this->getCurrentStatus($recordId);
            $userStatus = $this->getStatusFromUser($recordId);
            $currentAction = $this->getCurrentAction($recordId);
        }else{
            $flag = '';
        }
        $link_file_license = 'modules/Employee/license.json';
        if (file_exists($link_file_license))
        {
            $licenses = json_decode(file_get_contents($link_file_license));
        }
        $total_employee = $this->countEmployee();
        $viewer->assign('TOTAL_EMPLOY', $total_employee);
        $viewer->assign('LICENSE_TYPE',$licenses->type);
        $viewer->assign('FLAG', $flag);
        $viewer->assign('USER_STATUS', $userStatus);
        $viewer->assign('CURRENT_ACTION', $currentAction);

        if(!empty($record) && $request->get('isDuplicate') == true) {
            $recordModel = $this->record?$this->record:Vtiger_Record_Model::getInstanceById($record, $moduleName);
            $viewer->assign('MODE', '');

            //While Duplicating record, If the related record is deleted then we are removing related record info in record model
            $mandatoryFieldModels = $recordModel->getModule()->getMandatoryFieldModels();
            foreach ($mandatoryFieldModels as $fieldModel) {
                if ($fieldModel->isReferenceField()) {
                    $fieldName = $fieldModel->get('name');
                    if (Vtiger_Util_Helper::checkRecordExistance($recordModel->get($fieldName))) {
                        $recordModel->set($fieldName, '');
                    }
                }
            }
        }else if(!empty($record)) {
            $recordModel = $this->record?$this->record:Vtiger_Record_Model::getInstanceById($record, $moduleName);
            $viewer->assign('RECORD_ID', $record);
            $viewer->assign('MODE', 'edit');
        } else {
            $recordModel = Vtiger_Record_Model::getCleanInstance($moduleName);
            $recordModel->set('status','Potential');
            $viewer->assign('MODE', '');
        }
        if(!$this->record){
            $this->record = $recordModel;
        }
        $viewer->assign('CURRENT_STT', $currentStt);
        parent::process($request); // TODO: Change the autogenerated stub
	}

	public function getFlagActionByRecord($recordId){
	    global $adb;
        $sql = "SELECT flag FROM vtiger_hrm_employee WHERE candidate_id = ?";
        $params = array($recordId);
        $result = $adb->pquery($sql,$params);
        while ($row = $adb->fetchByAssoc($result)){
            $flag = $adb->query_result($result,0,'flag');
        }
        return $flag;
    }

    public function getCurrentStatus($recordId){
	    global $adb;
	    $rsStatus = $adb->pquery("SELECT status FROM vtiger_hrm_candidate WHERE id = ?",array($recordId));
	    $status = $adb->query_result($rsStatus,0,'status');
	    return $status;
    }

    public function getCurrentAction($recordId){
        global $adb;
        $rsStatus = $adb->pquery("SELECT candidate_action FROM vtiger_hrm_candidate WHERE id = ?",array($recordId));
        $status = $adb->query_result($rsStatus,0,'candidate_action');
        return $status;
    }

    function getStatusFromUser($candidateId){
        global $adb;
        $sql = "SELECT status FROM vtiger_users WHERE candidate = ?";
        $result = $adb->pquery($sql,array($candidateId));
        $status = $adb->query_result($result,0,'status');
        return $status;
    }

    public function countEmployee(){
        $adb = PearDatabase::getInstance();
        $sql = "SELECT COUNT(*) AS cnt FROM vtiger_hrm_employee AS e INNER JOIN vtiger_crmentity AS c ON c.crmid = e.employid INNER JOIN vtiger_users AS u ON u.id = e.user_id WHERE c.deleted = 0";
        $result = $adb->pquery($sql,array());
        if($adb->num_rows($result)){
            $count = $adb->query_result($result,0,'count');
        }
        return $count;
    }

}
